type User {
  id: String
  bankName: String
  firstName: String
  lastName: String
  patronymic: String
  birthdate: String
  gender: String
  email: String
  phone: String
  masterpassword: String
  password: String
  confirmPassword: String
  role: String
  token: String
  tin: String
}

type UserDocument {
  id: String
  client: User
  owner: User
  date: String
  status: String
}

type Notification {
  id: String,
  date: String,
  status: String,
  message: String,
  bank: User,
  bureau: User,
  client: User,
}

type Query {
  userlist: [User],
  useritem(id: String): User,
  useremailitem(email: String): User,
  userdocumentlist(bankid: String, excludeowner: String): [UserDocument],
  userdocumentitem(owner: String!, client: String!): UserDocument,
  checkuserdocument(client: String!): UserDocument,
  notificationlist(clientid: String, bankid: String, bureauid: String): [Notification]
}

type Mutation {

  createuser(
    bankName: String,
    firstName: String,
    lastName: String,
    patronymic: String,
    birthdate: String,
    gender: String,
    email: String!,
    phone: String,
    masterpassword: String,
    password: String!,
    confirmPassword: String!,
    role: String!
    tin: String!
  ): User,

  updateuser(
    id: String,
    bankName: String,
    firstName: String,
    lastName: String,
    patronymic: String,
    birthdate: String,
    gender: String,
    email: String,
    phone: String,
    password: String,
    confirmPassword: String,
    role: String,
    tin: String!
  ): User,

  resetpass(email: String!): User,
  recoverypass(token: String!,password: String!, confirmPassword: String): User,
  createnotification(client: String, bank: String, status: String): Notification
  updatenotification(id: String!, status: String!): Notification,

  createuserdocument(client: String!): UserDocument
  requestdocumentfrombureau(client: String!, message: String): Notification
  updateuserdocument(client: String!, bank: String!): UserDocument
}
